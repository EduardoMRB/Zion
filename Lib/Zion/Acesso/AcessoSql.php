<?phpnamespace Zion\Acesso;use Zion\Banco\Conexao;class AcessoSql{    protected $con;    public function __construct()    {        $this->con = Conexao::conectar();    }    /**     * Retorna o objeto QueryBuilder montando o sql para retornar a descrição      * do módulo indicado pelo parametro     * @param string $moduloNome     * @return \Doctrine\DBAL\Query\QueryBuilder     */    public function dadosModulo($moduloNome)    {        $qb = $this->con->qb();        $qb->select('*')            ->from('_modulo', '')            ->where($qb->expr()->eq('moduloCod', ':moduloNome'))            ->setParameter('moduloNome', $moduloNome, \PDO::PARAM_STR);        return $qb;    }    /**     * Retorna o objeto QueryBuilder montando o sql para verificar      * se o usuário tem permissão para acessar o módulo     * @param string $moduloNome     * @param string $acaoModuloIdPermissao     * @param int $usuarioCod     * @return \Doctrine\DBAL\Query\QueryBuilder     */    public function permissaoAcao($moduloNome, $acaoModuloIdPermissao, $usuarioCod)    {        $qb = $this->con->qb();        $qb->select('a.usuarioCod')            ->from('_usuario', 'a')            ->innerJoin('a', '_perfil', 'b', 'a.perfilCod = b.PerfilCod')            ->innerJoin('b', '_permissao', 'c', 'b.perfilCod = c.PerfilCod')            ->innerJoin('c', '_acao_modulo', 'd', 'c.acaoModuloCod = d.acaoModuloCod')            ->innerJoin('d', '_modulo', 'e', 'd.moduloCod = e.moduloCod')            ->where($qb->expr()->eq('a.usuarioCod', ':usuarioCod'))            ->andWhere($qb->expr()->eq('d.acaoModuloIdPermissao', ':acaoModuloIdPermissao'))            ->andWhere($qb->expr()->eq('e.moduloNome', ':moduloNome'))            ->setParameter('usuarioCod', $usuarioCod, \PDO::PARAM_INT)            ->setParameter('acaoModuloIdPermissao', $acaoModuloIdPermissao, \PDO::PARAM_STR)            ->setParameter('moduloNome', $moduloNome, \PDO::PARAM_STR);        return $qb;    }    /**     * Retorna o objeto QueryBuilder montando o sql para retornar      * as opções de módulo que o usuário tem direito     * @param string $moduloNome     * @param int $usuarioCod     * @return \Doctrine\DBAL\Query\QueryBuilder     */    public function permissoesModulo($moduloNome, $usuarioCod)    {        $qb = $this->con->qb();        $qb->select('d.*')            ->from('_usuario', 'a')            ->innerJoin('a', '_perfil', 'b', 'a.perfilCod = b.PerfilCod')            ->innerJoin('b', '_permissao', 'c', 'b.perfilCod = c.PerfilCod')            ->innerJoin('c', '_acao_modulo', 'd', 'c.acaoModuloCod = d.acaoModuloCod')            ->innerJoin('d', '_modulo', 'e', 'd.moduloCod = e.moduloCod')            ->where($qb->expr()->eq('a.usuarioCod', ':usuarioCod'))            ->andWhere($qb->expr()->eq('e.moduloNome', ':moduloNome'))            ->setParameter('usuarioCod', $usuarioCod, \PDO::PARAM_INT)            ->setParameter('moduloNome', $moduloNome, \PDO::PARAM_STR);        return $qb;    }    /**     * Retorna o objeto QueryBuilder montando o sql para retornar      * os dados de uma ação do módulo     * @param string $moduloNome     * @param string $acaoModuloIdPermissao     * @return \Doctrine\DBAL\Query\QueryBuilder     */    public function dadosAcaoModulo($moduloNome, $acaoModuloIdPermissao)    {        $qb = $this->con->qb();        $qb->select('a.*')            ->from('_acao_modulo', 'a')            ->innerJoin('a', '_modulo', 'b', 'a.moduloCod = b.moduloCod')            ->where($qb->expr()->eq('a.acaoModuloIdPermissao', ':acaoModuloIdPermissao'))            ->andWhere($qb->expr()->eq('b.moduloNome', ':moduloNome'))            ->setParameter(':acaoModuloIdPermissao', $acaoModuloIdPermissao, \PDO::PARAM_STR)            ->setParameter(':moduloNome', $moduloNome, \PDO::PARAM_STR);        return $qb;    }    /**     * Retorna o objeto QueryBuilder montando o sql para retornar      * as ações de módulo que o usuário tem direito     * @param string $moduloNome     * @param int $usuarioCod     * @return \Doctrine\DBAL\Query\QueryBuilder     */    public function acoesModulo($moduloNome, $usuarioCod, $condicao = '')    {        $qb = $this->con->qb();        $qb->select('d.*')            ->from('_usuario', 'a')            ->innerJoin('a', '_perfil', 'b', 'a.perfilCod = b.PerfilCod')            ->innerJoin('b', '_permissao', 'c', 'b.perfilCod = c.PerfilCod')            ->innerJoin('c', '_acao_modulo', 'd', 'c.acaoModuloCod = d.acaoModuloCod')            ->innerJoin('d', '_modulo', 'e', 'd.moduloCod = e.moduloCod')            ->where($qb->expr()->eq('a.usuarioCod', ':usuarioCod'))            ->andWhere($qb->expr()->eq('e.moduloNome', ':moduloNome'))            ->andWhere($condicao)            ->setParameter('usuarioCod', $usuarioCod, \PDO::PARAM_INT)            ->setParameter('moduloNome', $moduloNome, \PDO::PARAM_STR)            ->orderBy('d.acaoModuloPosicao');        return $qb;    }    /**     * Retorna o objeto QueryBuilder montando o sql para retornar      * os dados de uma ação do módulo a partir de acaoModuloCod     * @param string $moduloNome     * @param string $acaoModuloCod     * @return \Doctrine\DBAL\Query\QueryBuilder     */    public function dadosAcaoModuloCod($moduloNome, $acaoModuloCod)    {        $qb = $this->con->qb();        $qb->select('a.*')            ->from('_acao_modulo', 'a')            ->innerJoin('a', '_modulo', 'b', 'a.moduloCod = b.moduloCod')            ->where($qb->expr()->eq('a.acaoModuloCod', ':acaoModuloCod'))            ->andWhere($qb->expr()->eq('b.moduloNome', ':moduloNome'))            ->setParameter(':acaoModuloCod', $acaoModuloCod, \PDO::PARAM_INT)            ->setParameter(':moduloNome', $moduloNome, \PDO::PARAM_STR);        return $qb;    }}